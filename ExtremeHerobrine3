//*COPYRIGHT - YOU NEED TO READ IT IF YOU ARE OPENING THIS FILE - COPYRIGHT*//
//IM NOT ALLOWING ANYONE TO COPY,EDIT OR POSTING AND CLAIMING THIS IS YOUR MOD,DOING SO WILL RESULT IN A BAN, IF YOU SEE THIS MESSAGE, THEN YOU ARE GOING TO COPY AND EDIT IT RIGHT? GET OUT! I HATE STEALER, SO DO NOT COPY OR EDIT! >:(//



var random="ITS ME"
ModPE.overrideTexture("images/herobrine.png", "https://dl.dropboxusercontent.com/s/lbwlmb2wbju7b7e/herobrine.png?dl=0")
var alea;
var time;
var Herobrine; 
var spawned=0;
var pitch;
var yaw;
var orX;
var orY;


var version="Alpha 3.0";
var checkForUpdate=false;
var updateWindow=false; 
var newUpdate;
var updateMod;
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();

function checkVersion() {
    var r  = new java.lang.Runnable() {
        run: function() {
            try {
                var urls= new java.net.URL("https://raw.githubusercontent.com/bagas123/Mod-Creations/master/Extreme%20Herobrine%203%20Version");
                var check = urls.openConnection();
                check.setRequestMethod("GET");
                check.setDoOutput(true);
                check.connect();
                check.getContentLength();
                var script = check.getInputStream();
                var typeb = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, 1024);
                var byteCount = 0; 
                var checkedVersion;
                while((byteCount = script.read(typeb)) != -1) { 
                    checkedVersion = new java.lang.String(typeb, 0, byteCount);               
                }
                newUpdate = checkedVersion;
                if(version+"\n" != checkedVersion) {
                    clientMessage("New version " + newUpdate);
                    updateWindow=true;
                }
                else if(version+"\n"==checkedVersion){
                clientMessage("Sorry, no updates availaible yet..");
                }
            }
            catch(err) {
                clientMessage("Er.. Update check failed :( ");
                if(err=="JavaException: java.net.UnknownHostException: raw.githubusercontent.com") {
                                clientMessage("Looks like you have no internet connection.");
                            }
                            else {
                                clientMessage("Error!: \n"+ err);
                            } 
            }
        }
    }
    var threadt = new java.lang.Thread(r);
    threadt.start();
}
function updateVersion() {
    try {
        var upd = new android.app.AlertDialog.Builder(ctx);        
        upd.setTitle("We have a new version!");
        upd.setMessage("We have a new update\nWanna update it now?\nChangelogs:\n-You cannot place beds anymore. \n-Bugfixes \nCurrent version: " + version + "\nNew version: " + newUpdate);
        upd.setNegativeButton("Uhh.. no", new android.content.DialogInterface.OnClickListener() {
            onClick: function(par1) {
            dialog.dismiss(); 
   }
        });
        upd.setPositiveButton("Ok! Update!", new android.content.DialogInterface.OnClickListener() {
            onClick: function(par1) {
                var ru  = new java.lang.Runnable() {
                    run: function() {
                        try {
                            var urls = new java.net.URL("https://raw.githubusercontent.com/bagas123/Mod-Creations/master/ExtremeHerobrine3");
                            var check = urls.openConnection();
                            check.setRequestMethod("GET");
                            check.setDoOutput(true);
                            check.connect();
                            check.getContentLength();
                            var script = check.getInputStream();
                            var typeb = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, 1024);
                            var byteCount = 0;
                            while((byteCount = script.read(typeb)) != -1) { 
                                updateMod += new java.lang.String(typeb, 0, byteCount);               
                            }
                            var modpeFolder = ctx.getDir("modscripts", 0);
                            var modpeFile = new java.io.File(modpeFolder, "ExtremeHerobrine3.js");
                            var update = new java.io.PrintWriter(modpeFile);
                            update.write(updateMod);
                            update.flush();
                            update.close();
                             
                            try {
                                net.zhuoweizhang.mcpelauncher.ScriptManager.setEnabled(modpeFile, false);
                                net.zhuoweizhang.mcpelauncher.ScriptManager.setEnabled(modpeFile, true);
                                clientMessage("We downloaded it and enabled it.");
                                   
                            }
                            catch(err) {
                                clientMessage("Error: \n" + err);
                            }
                        }
                        catch(err) {
                            clientMessage("Error: \n" + err);
                        }
                    }
                }
                var threadt = new java.lang.Thread(ru);
                threadt.start();
            }
        });
        var dialog = upd.create();
        dialog.show() 
    }
    catch(err) {
        clientMessage("Error: \n" + err);
    }
}

function useItem(x,y,z,itemId,block,side)
{
if(itemId==355)
{
clientMessage("<Herobrine> You cannot sleep now.. MWAHAHAHA")
explode(x,y,z,2)
setTile(x,y,z,0)
}
}


function modTick()
{
alea=Math.floor((Math.random()*1000)+1);

time = Level.getTime()-Math.floor(Level.getTime()/19200)*19200; 
if(time<(19200/2)) 
{ 
} 

else
{

if(spawned==0&&alea==1)

{

pitch = ((Entity.getPitch(getPlayerEnt()) + 90) * Math.PI)/180;
yaw = ((Entity.getYaw(getPlayerEnt()) + 90) * Math.PI)/180;
orX = Math.sin(pitch) * Math.cos(yaw);
orZ = Math.sin(pitch) * Math.sin(yaw);

Herobrine = Level.spawnMob(getPlayerX()-(20*orX), getPlayerY(), getPlayerZ()-(20*orZ), 35, "herobrine.png");
Entity.setRenderType(Herobrine,3)
Entity.setHealth(Herobrine,10)
Level.setTile(Entity.getX(Herobrine), Entity.getY(Herobrine)-1, Entity.getZ(Herobrine), 63);
Level.setSignText(Entity.getX(Herobrine), Entity.getY(Herobrine)-1, Entity.getZ(Herobrine), 1, random);


spawned=1; 

}
}
}




function attackHook(a,e)
{
if(e==Herobrine)
{
Entity.remove(Herobrine)
clientMessage("Arrghh!!")
spawned=0;
}
if(e==getPlayerEnt())
Level.addParticle(ParticleType.flame, Entity.getX(a) , Entity.getY(a)+1, Entity.getZ(a), 0, 0, 0, 20);
}


